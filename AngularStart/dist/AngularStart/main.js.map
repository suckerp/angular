{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector:'Hallo',\n  template: `\n  <h1> HALLO {{ name }} </h1>`,\n  styles: []\n})\nexport class HalloComponent{\n  name = \"Max\"\n}\n\n\n@Component({\n  selector:'StringInterpolation',\n  template: `\n    <h1> TEST </h1>\n    <ul>\n    <li> {{ \"String\"}} </li>\n    <li> {{ \"zusammengesetzer \" + \"String\" }} </li>\n    <li>{{ \"Ternary\" + ((true)?\" Operator\":\"\") }}</li>\n    <li> {{ stringVar }} </li>\n    <li> {{returnString()}} </li>\n    <li> {{convertObject}} </li>\n    <li> {{ timer }}\n  `,\n  styles: []\n})\nexport class StringInterpolationComponent{\n  stringVar:string = \"Stringvariable\"\n  returnString(){\n    return \"returnString\"\n  }\n\n  convertObject = {\n    text: \"Daten\",\n    toString:function(this:{text:string}){\n      return this.text\n    }\n  }\n\n  timer = 0\n\n  constructor(){\n    setInterval(()=>{\n      this.timer++\n    },300)\n  }\n\n}\n\n\n@Component({\n  selector: 'PropertyBinding',\n  template: `\n    <h1> PropertyBinding </h1>\n    <ul>\n      <li [innerText] = \"text\"> </li>\n      <li [innerHTML] = \"myhtml\"> </li>\n      <li [style.background-color] = \"mycolor\"> text </li>\n      <li [contentEditable] = \"editierbar\"> editierbar</li>\n      <li [innerHTML] = \"timer\"> </li>\n      <li> </li>\n    </ul>\n  `,\n  styles: []\n})\nexport class PropertyBindingComponent {\n  text = \"mein Text\"\n  myhtml = \"<h3> mein text </h3>\"\n  mycolor = \"red\"\n  editierbar = true\n\n  timer = 0\n  constructor(){\n    setInterval(()=>{\n      this.timer++\n    },300)\n  }\n}\n\n@Component({\n  selector: 'EventBinding',\n  template: `\n    <h1> EventBinding </h1>\n    <ul>\n      <!-- Standard HTML/JS Version -->\n      <li> \n        <button onclick = \"console.log('click')\">click</button>\n      </li>\n      <!-- Angular Event Binding -->\n      <li> \n        <button (click) = \"onClick($event)\">click</button>\n      </li>\n      <li>\n        <!-- $event ist ein festgelegtes Anguler Element, dass die Daten des Elements erhält -->\n        <input \n        (change) = \"onChange($event)\"\n        (input) = \"onInput($event)\"\n        >\n      </li>\n      <li> </li>\n      <li> </li>\n      <li> </li>\n      <li> </li>\n    </ul>\n  `,\n  styles: []\n})\nexport class EventBindingComponent {\n  onClick(e:Event){\n    console.log(\"Click\")\n    console.log(e)\n  }\n  onChange(e:Event){\n    let input:HTMLInputElement = e.target as HTMLInputElement\n    console.log(\"Change\")\n    console.log(e)\n    console.log(input)\n  }\n  onInput(e:Event){\n    console.log(\"Input\")\n    console.log(e)\n  }\n}\n\n\n// Kombination aus EventBinding und Propertybinding\n@Component({\n  selector: 'Aufgabe01',\n  template: `\n    <h1> Aufgabe01 </h1>\n\n      <!-- Übergabe des $Events an die Funktion -->\n      <input (input) = \"onInput($event)\"> <br>\n      <!-- im output wird soll dann der Wert aus dem input Feld eingetragen werden -->\n      {{output}}\n  `,\n  styles: []\n})\nexport class Aufgabe01Component {\n  // erst output definieren, damit es im onChange() bekannt ist\n  output:string\n  onInput(e:Event){\n    // das Target des onClicks auslesen\n    const input = e.target as HTMLInputElement\n    // this ist der Klassenname, der zum output gehört und value ist der Wert, der übergeben wird\n    this.output = input.value\n  }\n}\n\n// Kombination aus EventBinding und Propertybinding\n@Component({\n  selector: 'Aufgabe02',\n  template: `\n    <h1> Aufgabe02 </h1>\n\n      <!-- Übergabe des $Events an die Funktion -->\n      <input (input) = \"onInput1($event)\">\n      <input (input) = \"onInput2($event)\"> \n      <br>\n      <!-- im output wird soll dann der Wert aus dem input Feld eingetragen werden -->\n      {{output}}\n  `,\n  styles: []\n})\nexport class Aufgabe02Component {\n  // Es sind alles public Eigenschaften brauchen daher kein const oder let\n  // können aus allen Funktionen heraus ausgelesen und geändert werden\n  public zahl1:number = 0\n  public zahl2:number = 0\n  public output:number = 0\n  onInput1(e:Event){\n    // erste Zahl auslesen und mit der zweiten Zahl addieren\n    const input = e.target as HTMLInputElement\n    this.zahl1 = Number(input.value)\n    this.output = this.zahl1 + this.zahl2\n  }\n  onInput2(e:Event){\n    // zweite Zahl auslesen und mit der ersten Zahl addieren\n    const input = e.target as HTMLInputElement\n    this.zahl2 = Number(input.value)\n    this.output = this.zahl1 + this.zahl2\n  }\n\n}\n\n\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <!-- <Hallo></Hallo> -->\n    <!-- <StringInterpolation></StringInterpolation> -->\n    <!-- <PropertyBinding></PropertyBinding> -->\n    <!-- <EventBinding></EventBinding> -->\n    <!-- <Aufgabe01></Aufgabe01> -->\n    <Aufgabe02></Aufgabe02>\n  `,\n  styles: [``]\n})\nexport class AppComponent {\n  title = 'AngularStart';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { \n  AppComponent, \n  HalloComponent, \n  StringInterpolationComponent, \n  PropertyBindingComponent,\n  EventBindingComponent,\n  Aufgabe01Component,\n  Aufgabe02Component\n} from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HalloComponent,\n    StringInterpolationComponent,\n    PropertyBindingComponent,\n    EventBindingComponent,\n    Aufgabe01Component,\n    Aufgabe02Component\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}